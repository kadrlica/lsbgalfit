================================================================================
# GUIDE TO INPUT FILE FOR GALFITM (a product of the MegaMorph project)
#Including multi-band fitting, non-parametric component and MultiNest sampling.
#CSL = comma separated list (must not contain any whitespace)
#Where several lines are given for the same letter code, these are alternative
#examples. The behaviour for multiple lines with the same letter is undefined.
#================================================================================
# IMAGE and GALFIT CONTROL PARAMETER

# Input data images (CSL of FITS filenames)
# the number of input data images defines <nbands>
# the order of the bands must be maintained in all multi-band options
# the first band in the list is the 'reference band'
A) {imgpath}

# Band labels (CSL of <nbands> labels containing no whitespace)
# (these must be unique in a case-insensitive manner)
# (can be omitted if fitting a single band)
A1) {bands}

# Band wavelengths (CSL of values)
# (choice of wavelength units is arbitrary, as long as consistent,
#  but affects the resulting wavelength-dependence parameters)
A2) 480,640,780

# Output data image block (FITS filename)
B) {outpath}

# Sigma image name (CSL of <nbands> FITS filenames or "none")
# (if an individual filename is specified as "none", then that sigma
#  image will be made from data; if the whole entry consists of just a
#  single "none", then all sigma images will be made from data.)
# One can also add a minimum sigma value, such that any galfit-created
# sigma image will have a minimum of that value times the sky-subtracted
# input data.
C) {sigpath}
#C) sig-r.fits,sig-g.fits,sig-i.fits
#C) none,none,none
#C) sig-r.fits,none,sig-i.fits         # perhaps unwise to do this in practice
#C) none    0.1			      # min. sigma is 10% of the data flux

# Input PSF image (CSL of <nbands> FITS filenames) 
# and a single diffusion kernel (FITS filename, # or omitted)
D) {psfpath}
#D) psf-r.fits,psf-g.fits,psf-i.fits  #  
#D) psf-r.fits,psf-g.fits,psf-i.fits  kernel.fits

# PSF fine sampling factor relative to data 
E) 1                   

# Bad pixel mask (CSL of <nbands> FITS image or ASCII coord list)
# (if an individual filename is specified as "none", then a blank
#  mask will be used; if the whole entry consists of just a single
#  "none", then all masks will be blank.)
F) {mskpath}
#F) mask-r.fits,mask-g.fits,mask-i.fits
#F) none,none,none
#F) mask-r.fits,none,mask-i.fits

# File with parameter constraints (ASCII file)
G) {constraints}
#G) constraints_filename

# Image region to fit (xmin xmax ymin ymax)
H) 0 {xmax} 0 {ymax}   # Image region to fit (xmin xmax ymin ymax)

# Size of the convolution box (x y)
I) 100    100

# Magnitude photometric zeropoint (CSL of <nbands> values)
J) 30.0,30.0,30.0

# Plate scale (dx dy)   [arcsec per pixel]
K) 0.263  0.263

# Display type (regular, curses, both)
O) regular             

# Options: 0=normal run; 1,2=make model/imgblock & quit
P) 0                   

W) input,model,residual #and assumed if omitted

# THE OBJECT LIST BELOW can be however long or short as the complexity
# requires.  The user has complete freedom to mix and match the components
# by duplicating each object block.

# INITIAL FITTING PARAMETERS
#
# column 1: Parameter number
#
# column 2:
# -- Parameter 0: the allowed functions are: sersic, nuker, expdisk
#    	       	  edgedisk, devauc, king, moffat, gaussian, ferrer, psf, sky
# -- Parameter 1-10: value of the initial parameters
# -- and Parameter C0: For diskiness/boxiness (<0 = disky, >0 = boxy)
#  	     	  By default this is a CSL of the values of the parameter
#  	     	  in each of the input bands.  This may be optionally indicated
#		  by putting the word 'band' at the end of the line (before any
#  	     	  comment).
#  	     	  Only specifying a single value with multiple input bands
#  	     	  assumes the same value for all bands.
#                 This can also optionally be specified in terms of Chebyshev
#	       	  coefficients by adding the word 'cheb' at the end of the line
#  	     	  (before any comment).
#	       	  In this case one should give a CSL of at most <nbands> values
#		  corresponding to coefficients of a Chebyshev series.
# 	     	  First value of the CSL specifies the parameter value at the
#	     	  average wavelength of the input bands.
#	     	  Additional values in the CSL specify the variation in that
#	     	  parameter value with wavelength, from linear (1st-order),
#	     	  quadratic (2nd-order), up to <nbands>-order (which should be
#	     	  equivalent to fitting the value independently for each band
#		  Values omitted from the end of the CSL are assumed to be zero.
# -- Parameter Z: Outputting image options, the options are:
#              	  0 = normal, i.e. subtract final model from the data to create
#		      the residual image
#	      	  1 = Leave in the model -- do not subtract from the data
#
# column 3: This may be specified in one of two ways:
#           An integer giving the order of the Chebyshev series , e.g.,
#             0 = fixed to input value(s)
#             1 = fit a constant offset from the input value(s)
#             2 = fit a linear function of wavelength
#             3 = fit a quadratic function of wavelength, etc.
#           Note that, for >2, the input values are fit by a polynomial function
#           of the specified order before fitting begins.
#           Alternatively, one may give a CSL of at most <nbands> integers
#           indicating whether or not that coefficient is allowed to vary
#           (yes = 1, no = 0).  Values omitted from the end of the CSL are
#           assumed to be zero.
#
# column 4: comment

# Sersic function --------------------------------------------------------------

# Only this first function includes multi-band examples, but the same approach
# should work for all these functions.

 0) sersic     # Object type
 1) {posx:.2f}   {config[feedme][posx]}  # position x [pixel]
 2) {posy:.2f}   {config[feedme][posy]}  # position y [pixel]
 3) {magstr} {config[feedme][mag]}     # total magnitude in each band
 4) {reffstr}   {config[feedme][reff]}     # R_e in each band
 5) 1.0      {config[feedme][index]}     # Sersic exponent in each band
 9) {ellip:.2f}  {config[feedme][ellip]}     # axis ratio (b/a) in each band
10) {pa:.1f}      {config[feedme][pa]}     # position angle (PA) in each band
 Z) 0                  #  Skip this model in output image?  (yes=1, no=0)

# sky --------------------------------------------------------------------------

 0) sky
 1) 0.0,0.0,0.0  3       # sky background       [ADU counts]
 2) 0.0,0.0,0.0  0       # dsky/dx (sky gradient in x) 
 3) 0.0,0.0,0.0  0       # dsky/dy (sky gradient in y) 
 Z) 0                    #  Skip this model in output image?  (yes=1, no=0)

